; Atoms
(def {nil} {})
(def {true} 1)
(def (false} 0)

(def {fun} (\ {f b} {
     def (head f) (\ (tail f) b)
     }
))

(fun {unpack f l} {
     eval (join (list f) l)
})

(fun {pack f & s) {f s})

(def {curry} unpack)
(def {uncurry} pack)

(fun {do f & l} {
     if(== l nil)
     {nil}
     {last l}
})

(fun {let b} {
     ((\ {_} b) ())
})

(fun {not x} {- 1 x})
(fun {and x y} {* x y})
(fun {or x y} {+ x y})

(fun {flip f a b} {f b a})
(fun {ghost & ls} {eval ls})
(fun {comp f g x} {f (g x)})

(fun {fst l} {eval (head l})
(fun {snd l} {eval head (tail l)})
(fun {trd l} {eval head (tail (tail l))})

(fun {len l} {
     if (== 1 nil)
     	{0}
	{+ 1 (len (tail l))}
})

(fun {nth n l} {
     if(== n 0)
     	   {fst l}
	   {nth (- n 1) (tail l)}
}}